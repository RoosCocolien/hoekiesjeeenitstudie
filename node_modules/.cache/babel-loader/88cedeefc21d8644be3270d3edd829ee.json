{"ast":null,"code":"var _jsxFileName = \"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\n\nconst Quiz = () => {\n  _s();\n\n  //create states\n  const [loading, setLoading] = useState(false); //start with false\n\n  const [quizIndex, setQuizIndex] = useState(0); //start at zero\n\n  const [question, setQuestion] = useState(Questions[quizIndex].question); //type later\n\n  const [userOptions, setUserOptions] = useState(Questions[quizIndex].options);\n  const [answerResults, setScore] = useState({\n    bootcamp: 0,\n    trad: 0,\n    online: 0,\n    traineeship: 0,\n    alternative: 0\n  });\n  const [endOfQuiz, setEndOfQuiz] = useState(false);\n\n  const selectAnswer = e => {//selectAnswer save it in variable\n  };\n\n  const checkAnswer = e => {//add points to the different studie types\n  };\n\n  const nextQuestion = () => {\n    //add selected answer to userOptions\n    setLoading(true);\n    setQuizIndex(quizIndex + 1);\n    setQuestion(Questions[quizIndex].question);\n    setUserOptions(Questions[quizIndex].options);\n    setLoading(false); //only necessary if I would work with a database or API\n  };\n\n  const showResult = () => {\n    setQuizIndex(0);\n    setEndOfQuiz(true);\n  }; // console.log(TOTAL_QUESTIONS - 1);\n  // console.log(quizIndex);\n  // console.log(endOfQuiz);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuizPage\",\n    children: [endOfQuiz || quizIndex != TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        questionIndex: quizIndex,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: question,\n        answers: userOptions,\n        userAnswer: userOptions ? userOptions[quizIndex] : undefined,\n        answerResults: answerResults,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), quizIndex === TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Goed gedaan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Je hebt het einde behaald!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"result\",\n          onClick: showResult,\n          children: \"RESULTAAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }, this), endOfQuiz && /*#__PURE__*/_jsxDEV(Result, {\n      answerResults: answerResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"IGR2GlEC+2ff7kWxGlaOFfOXBlo=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx"],"names":["React","useState","Question","Result","Questions","TOTAL_QUESTIONS","Quiz","loading","setLoading","quizIndex","setQuizIndex","question","setQuestion","userOptions","setUserOptions","options","answerResults","setScore","bootcamp","trad","online","traineeship","alternative","endOfQuiz","setEndOfQuiz","selectAnswer","e","checkAnswer","nextQuestion","showResult","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { shuffleArray } from '../utils';\n\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\ninterface Score {\n\tbootcamp: number,\n\ttrad: number,\n\tonline: number,\n\ttraineeship: number,\n\talternative: number\n}\n\nconst Quiz = () => {\n\t//create states\n\tconst [loading, setLoading] = useState<boolean>(false); //start with false\n\tconst [quizIndex, setQuizIndex] = useState<number>(0); //start at zero\n\tconst [question, setQuestion] = useState<any>(Questions[quizIndex].question); //type later\n\tconst [userOptions, setUserOptions] = useState<string[]>(Questions[quizIndex].options);\n\tconst [answerResults, setScore] = useState<Score>({bootcamp: 0, trad: 0, online: 0, traineeship: 0, alternative: 0});\n\tconst [endOfQuiz, setEndOfQuiz] = useState<boolean>(false);\n\n\n\tconst selectAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t//selectAnswer save it in variable\n\t}\n\n\tconst checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t//add points to the different studie types\n\t}\n\n\tconst nextQuestion = () => {\n\t\t//add selected answer to userOptions\n\t\tsetLoading(true);\n\t\tsetQuizIndex(quizIndex + 1);\n\t\tsetQuestion(Questions[quizIndex].question);\n\t\tsetUserOptions(Questions[quizIndex].options);\n\t\tsetLoading(false); //only necessary if I would work with a database or API\n\t}\n\n\tconst showResult = () => {\n\t\tsetQuizIndex(0);\n\t\tsetEndOfQuiz(true);\n\t}\n\n\t// console.log(TOTAL_QUESTIONS - 1);\n\t// console.log(quizIndex);\n\t// console.log(endOfQuiz);\n\n\treturn (\n\t\t<div className=\"QuizPage\">\n\n\t\t\t{endOfQuiz! || quizIndex != TOTAL_QUESTIONS - 1 && \n\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t<Question \n\t\t\t\t\t\tquestionIndex={quizIndex}\n\t\t\t\t\t\ttotalQuestions={TOTAL_QUESTIONS}\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\tanswers={userOptions}\n\t\t\t\t\t\tuserAnswer={userOptions ? userOptions[quizIndex] : undefined}\n\t\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t\t\tcallback={checkAnswer}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"next\" onClick={nextQuestion}>\n\t\t\t\t\t\tNEXT\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t{quizIndex === TOTAL_QUESTIONS - 1 &&\n\t\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\tGoed gedaan!\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tJe hebt het einde behaald!\n\t\t\t\t\t\t\t<button className=\"result\" onClick={showResult}>\n\t\t\t\t\t\t\t\tRESULTAAT\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{endOfQuiz &&\n\t\t\t\t<Result \n\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}