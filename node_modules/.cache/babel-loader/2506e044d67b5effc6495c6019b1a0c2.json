{"ast":null,"code":"var _jsxFileName = \"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\n\nconst Quiz = () => {\n  _s();\n\n  //create states\n  const [loading, setLoading] = useState(false); //start with false\n\n  const [quizIndex, setQuizIndex] = useState(0); //start at zero\n\n  const [question, setQuestion] = useState(Questions[quizIndex]); //type later\n\n  const [userOptions, setUserOptions] = useState([]);\n  const [answerResults, setScore] = useState({\n    bootcamp: 0,\n    trad: 0,\n    online: 0,\n    traineeship: 0,\n    alternative: 0\n  });\n  const [endOfQuiz, setEndOfQuiz] = useState(false);\n\n  const selectAnswer = e => {//select and save current answer\n  };\n\n  const nextQuestion = () => {\n    //if selected answer\n    //add selected answer to userOptions\n    console.log('test 1 ' + quizIndex);\n    setLoading(true);\n    console.log('test 2 ' + quizIndex);\n    setQuizIndex(quizIndex + 1);\n    console.log('test 3 ' + quizIndex);\n    setQuestion(Questions[quizIndex]);\n    console.log('test 4 ' + quizIndex); // setUserOptions(Questions[quizIndex].options); I'm using this one for the selected answers\n\n    setLoading(false); //only necessary if I would work with a database or API\n\n    console.log('test 5 ' + quizIndex);\n  };\n\n  const showResult = () => {\n    //calculate/\n    setQuizIndex(0);\n    setEndOfQuiz(true);\n  }; // console.log(TOTAL_QUESTIONS - 1);\n\n\n  console.log('test*: ', quizIndex); // console.log(endOfQuiz);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuizPage\",\n    children: [endOfQuiz || quizIndex != TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        questionIndex: quizIndex,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: question.question,\n        answers: question.options,\n        answerResults: answerResults,\n        callback: selectAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), quizIndex === TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Goed gedaan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Je hebt het einde behaald!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"result\",\n          onClick: showResult,\n          children: \"RESULTAAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }, this), endOfQuiz && /*#__PURE__*/_jsxDEV(Result, {\n      answerResults: answerResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"/P3qNNnXehzKbxRGkRQHlf6GwdI=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx"],"names":["React","useState","Question","Result","Questions","TOTAL_QUESTIONS","Quiz","loading","setLoading","quizIndex","setQuizIndex","question","setQuestion","userOptions","setUserOptions","answerResults","setScore","bootcamp","trad","online","traineeship","alternative","endOfQuiz","setEndOfQuiz","selectAnswer","e","nextQuestion","console","log","showResult","options"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { shuffleArray } from '../utils';\n\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\ninterface Score {\n\tbootcamp: number,\n\ttrad: number,\n\tonline: number,\n\ttraineeship: number,\n\talternative: number\n}\n\nconst Quiz = () => {\n\t//create states\n\tconst [loading, setLoading] = useState<boolean>(false); //start with false\n\tconst [quizIndex, setQuizIndex] = useState<number>(0); //start at zero\n\tconst [question, setQuestion] = useState<any>(Questions[quizIndex]); //type later\n\tconst [userOptions, setUserOptions] = useState<number[]>([]);\n\tconst [answerResults, setScore] = useState<Score>({bootcamp: 0, trad: 0, online: 0, traineeship: 0, alternative: 0});\n\tconst [endOfQuiz, setEndOfQuiz] = useState<boolean>(false);\n\n\tconst selectAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t//select and save current answer\n\n\t}\n\n\tconst nextQuestion = () => {\n\t\t//if selected answer\n\t\t//add selected answer to userOptions\n\n\t\tconsole.log('test 1 ' + quizIndex);\n\t\tsetLoading(true);\n\t\tconsole.log('test 2 ' + quizIndex);\n\t\tsetQuizIndex(quizIndex + 1);\n\t\tconsole.log('test 3 ' + quizIndex);\n\t\tsetQuestion(Questions[quizIndex]);\n\t\tconsole.log('test 4 ' + quizIndex);\n\t\t// setUserOptions(Questions[quizIndex].options); I'm using this one for the selected answers\n\t\tsetLoading(false); //only necessary if I would work with a database or API\n\t\tconsole.log('test 5 ' + quizIndex);\n\t}\n\n\tconst showResult = () => {\n\t\t//calculate/\n\t\tsetQuizIndex(0);\n\t\tsetEndOfQuiz(true);\n\t}\n\n\t// console.log(TOTAL_QUESTIONS - 1);\n\tconsole.log('test*: ', quizIndex);\n\t// console.log(endOfQuiz);\n\n\treturn (\n\t\t<div className=\"QuizPage\">\n\n\t\t\t{endOfQuiz! || quizIndex != TOTAL_QUESTIONS - 1 && \n\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t<Question \n\t\t\t\t\t\tquestionIndex={quizIndex}\n\t\t\t\t\t\ttotalQuestions={TOTAL_QUESTIONS}\n\t\t\t\t\t\tquestion={question.question}\n\t\t\t\t\t\tanswers={question.options}\n\t\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t\t\tcallback={selectAnswer}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"next\" onClick={nextQuestion}>\n\t\t\t\t\t\tNEXT\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t{quizIndex === TOTAL_QUESTIONS - 1 &&\n\t\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\tGoed gedaan!\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tJe hebt het einde behaald!\n\t\t\t\t\t\t\t<button className=\"result\" onClick={showResult}>\n\t\t\t\t\t\t\t\tRESULTAAT\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{endOfQuiz &&\n\t\t\t\t<Result \n\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}