{"ast":null,"code":"import _defineProperty from\"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';//functional component useForm\n//initialState stores the various values (name, email, message)\n//callback is the function that will be executed when use submits form\nexport var useForm=function useForm(callback){var initialState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log('setting values');var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];console.log('Values: '+values);var onChange=function onChange(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value)));};var onSubmit=function onSubmit(event){event.preventDefault();console.log('clicked on submit');callback();};return{onChange:onChange,onSubmit:onSubmit,values:values};};/*\n\tonChange >> sets target value of event that is passed to the target name\n\tinitialState should have attributes with the same name as the specified\n\tin the input field!\n\tonSubmit >> there is no database\n*/","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Contact/useForm.tsx"],"names":["useState","useForm","callback","initialState","console","log","values","setValues","onChange","event","target","name","value","onSubmit","preventDefault"],"mappings":"+ZAAA,OAAgBA,QAAhB,KAAgC,OAAhC,CAEA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAsC,IAAtBC,CAAAA,YAAsB,2DAAP,EAAO,CAC5DC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA,cAA4BL,QAAQ,CAACG,YAAD,CAApC,wCAAOG,MAAP,eAAeC,SAAf,eACAH,OAAO,CAACC,GAAR,CAAY,WAAaC,MAAzB,EAEA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAgD,CAChEF,SAAS,gCAAMD,MAAN,wBAAeG,KAAK,CAACC,MAAN,CAAaC,IAA5B,CACTF,KAAK,CAACC,MAAN,CAAaE,KADJ,GAAT,CAEA,CAHD,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACJ,KAAD,CAA6C,CAC7DA,KAAK,CAACK,cAAN,GACAV,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAH,QAAQ,GACR,CAJD,CAMA,MAAO,CACNM,QAAQ,CAARA,QADM,CAENK,QAAQ,CAARA,QAFM,CAGNP,MAAM,CAANA,MAHM,CAAP,CAKA,CArBM,CAyBP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\n\n//functional component useForm\n//initialState stores the various values (name, email, message)\n//callback is the function that will be executed when use submits form\nexport const useForm = (callback: any, initialState = {}) => {\n\tconsole.log('setting values');\n\tconst [values, setValues] = useState(initialState);\n\tconsole.log('Values: ' + values);\n\n\tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetValues({ ...values, [event.target.name]:\n\t\tevent.target.value });\n\t};\n\n\tconst onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault();\n\t\tconsole.log('clicked on submit');\n\t\tcallback();\n\t}\n\n\treturn {\n\t\tonChange,\n\t\tonSubmit,\n\t\tvalues,\n\t};\n}\n\n\n\n/*\n\tonChange >> sets target value of event that is passed to the target name\n\tinitialState should have attributes with the same name as the specified\n\tin the input field!\n\tonSubmit >> there is no database\n*/"]},"metadata":{},"sourceType":"module"}