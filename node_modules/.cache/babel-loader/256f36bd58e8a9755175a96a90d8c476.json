{"ast":null,"code":"var _jsxFileName = \"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  //create states\n  const [loading, setLoading] = useState(false); //start with false\n\n  const [questions, setQuestions] = useState([]); //type later\n\n  const [quizIndex, setQuizIndex] = useState(0); //start at zero\n\n  const [userAnswers, setUserAnswers] = useState([]); //empty array\n\n  const [answerResults, setScore] = useState({}); // const startQuiz = async () => {\n  // \t//start quiz, check state, which question is next?\n  // }\n\n  const selectAnswer = e => {//selectAnswer save it in variable\n  };\n\n  const checkAnswer = e => {//add points to the different studie types\n  };\n\n  const nextQuestion = () => {\n    //checkAnswer\n    quizIndex += 1;\n    console.log('test: ' + quizIndex);\n  };\n\n  const showResult = () => {//naar Resultaat\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"wBvc6ge8Rewo/7bNn2DM2wSIEV4=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx"],"names":["React","useState","Question","Quiz","loading","setLoading","questions","setQuestions","quizIndex","setQuizIndex","userAnswers","setUserAnswers","answerResults","setScore","selectAnswer","e","checkAnswer","nextQuestion","console","log","showResult"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AASA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC,CAFkB,CAE6B;;AAC/C,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CAHkB,CAG8B;;AAChD,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAD,CAA1C,CAJkB,CAI6B;;AAC/C,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CALkB,CAKkC;;AACpD,QAAM,CAACW,aAAD,EAAgBC,QAAhB,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C,CANkB,CAQlB;AACA;AACA;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAwC,CAC5D;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAID,CAAD,IAAwC,CAC3D;AACA,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AAC1B;AACAT,IAAAA,SAAS,IAAI,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWX,SAAvB;AACA,GAJD;;AAMA,QAAMY,UAAU,GAAG,MAAM,CACxB;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAEH,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAtCD;;GAAMd,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\ninterface Score {\n\tbootcamp: number[],\n\ttrad: number[],\n\tonline: number[],\n\ttraineeship: number[],\n\talternative: number[]\n}\n\nconst Quiz = () => {\n\t//create states\n\tconst [loading, setLoading] = useState(false); //start with false\n\tconst [questions, setQuestions] = useState([]); //type later\n\tconst [quizIndex, setQuizIndex] = useState(0); //start at zero\n\tconst [userAnswers, setUserAnswers] = useState([]); //empty array\n\tconst [answerResults, setScore] = useState({});\n\n\t// const startQuiz = async () => {\n\t// \t//start quiz, check state, which question is next?\n\t// }\n\n\tconst selectAnswer = (e: React.MouseEvent<HTMLLIElement>) => {\n\t\t//selectAnswer save it in variable\n\t}\n\n\tconst checkAnswer = (e: React.MouseEvent<HTMLLIElement>) => {\n\t\t//add points to the different studie types\n\t}\n\n\tconst nextQuestion = () => {\n\t\t//checkAnswer\n\t\tquizIndex += 1;\n\t\tconsole.log('test: ' + quizIndex);\n\t}\n\n\tconst showResult = () => {\n\t\t//naar Resultaat\n\t}\n\n\treturn (\n\t\t<div className=\"Quiz\">\n\t\t\t<Question />\n\t\t\t<button className=\"next\" onClick={nextQuestion}>\n\t\t\t\tNEXT\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}