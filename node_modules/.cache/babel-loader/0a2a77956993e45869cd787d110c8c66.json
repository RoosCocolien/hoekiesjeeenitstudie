{"ast":null,"code":"var _jsxFileName = \"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Questions from '../data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\n\nconst Quiz = () => {\n  _s();\n\n  //create states\n  const [loading, setLoading] = useState(false); //start with false\n\n  const [quizIndex, setQuizIndex] = useState(0); //start at zero\n\n  const [question, setQuestion] = useState(Questions[quizIndex].question); //type later\n\n  const [userOptions, setUserOptions] = useState(Questions[quizIndex].options);\n  const [answerResults, setScore] = useState({\n    bootcamp: 0,\n    trad: 0,\n    online: 0,\n    traineeship: 0,\n    alternative: 0\n  });\n  const [endOfQuiz, setEndOfQuiz] = useState(false);\n\n  const selectAnswer = e => {//selectAnswer save it in variable\n  };\n\n  const checkAnswer = e => {//add points to the different studie types\n  };\n\n  const nextQuestion = () => {\n    setLoading(true);\n    setQuizIndex(quizIndex + 1);\n    setQuestion(Questions[quizIndex].question);\n    setUserOptions(Questions[quizIndex].options);\n    setLoading(false);\n    console.log('test: ' + quizIndex);\n  };\n\n  const showResult = () => {//naar Resultaat\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      questionIndex: quizIndex,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: question,\n      answers: userOptions,\n      userAnswer: userOptions ? userOptions[quizIndex] : undefined,\n      answerResults: answerResults,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"IGR2GlEC+2ff7kWxGlaOFfOXBlo=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx"],"names":["React","useState","Question","Questions","TOTAL_QUESTIONS","Quiz","loading","setLoading","quizIndex","setQuizIndex","question","setQuestion","userOptions","setUserOptions","options","answerResults","setScore","bootcamp","trad","online","traineeship","alternative","endOfQuiz","setEndOfQuiz","selectAnswer","e","checkAnswer","nextQuestion","console","log","showResult","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA;AACA;AACA,MAAMC,eAAe,GAAG,CAAxB;;AASA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,KAAV,CAAtC,CAFkB,CAEsC;;AACxD,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAS,CAAT,CAA1C,CAHkB,CAGqC;;AACvD,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAME,SAAS,CAACK,SAAD,CAAT,CAAqBE,QAA3B,CAAxC,CAJkB,CAI4D;;AAC9E,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAWE,SAAS,CAACK,SAAD,CAAT,CAAqBM,OAAhC,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,QAAhB,IAA4Bf,QAAQ,CAAQ;AAACgB,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,IAAI,EAAE,CAApB;AAAuBC,IAAAA,MAAM,EAAE,CAA/B;AAAkCC,IAAAA,WAAW,EAAE,CAA/C;AAAkDC,IAAAA,WAAW,EAAE;AAA/D,GAAR,CAA1C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAU,KAAV,CAA1C;;AAGA,QAAMuB,YAAY,GAAIC,CAAD,IAA4C,CAChE;AACA,GAFD;;AAIA,QAAMC,WAAW,GAAID,CAAD,IAA4C,CAC/D;AACA,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AAC1BpB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAG,IAAAA,WAAW,CAACR,SAAS,CAACK,SAAD,CAAT,CAAqBE,QAAtB,CAAX;AACAG,IAAAA,cAAc,CAACV,SAAS,CAACK,SAAD,CAAT,CAAqBM,OAAtB,CAAd;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWrB,SAAvB;AACA,GAPD;;AASA,QAAMsB,UAAU,GAAG,MAAM,CACxB;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC,QAAC,QAAD;AACC,MAAA,aAAa,EAAEtB,SADhB;AAEC,MAAA,cAAc,EAAEJ,eAFjB;AAGC,MAAA,QAAQ,EAAEM,QAHX;AAIC,MAAA,OAAO,EAAEE,WAJV;AAKC,MAAA,UAAU,EAAEA,WAAW,GAAGA,WAAW,CAACJ,SAAD,CAAd,GAA4BuB,SALpD;AAMC,MAAA,aAAa,EAAEhB,aANhB;AAOC,MAAA,QAAQ,EAAEW;AAPX;AAAA;AAAA;AAAA;AAAA,YADD,eAUC;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,OAAO,EAAEC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CA/CD;;GAAMtB,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\nimport Questions from '../data/questions.json';\nimport { shuffleArray } from '../utils';\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\ninterface Score {\n\tbootcamp: number,\n\ttrad: number,\n\tonline: number,\n\ttraineeship: number,\n\talternative: number\n}\n\nconst Quiz = () => {\n\t//create states\n\tconst [loading, setLoading] = useState<boolean>(false); //start with false\n\tconst [quizIndex, setQuizIndex] = useState<number>(0); //start at zero\n\tconst [question, setQuestion] = useState<any>(Questions[quizIndex].question); //type later\n\tconst [userOptions, setUserOptions] = useState<string[]>(Questions[quizIndex].options);\n\tconst [answerResults, setScore] = useState<Score>({bootcamp: 0, trad: 0, online: 0, traineeship: 0, alternative: 0});\n\tconst [endOfQuiz, setEndOfQuiz] = useState<boolean>(false);\n\n\n\tconst selectAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t//selectAnswer save it in variable\n\t}\n\n\tconst checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t//add points to the different studie types\n\t}\n\n\tconst nextQuestion = () => {\n\t\tsetLoading(true);\n\t\tsetQuizIndex(quizIndex + 1);\n\t\tsetQuestion(Questions[quizIndex].question);\n\t\tsetUserOptions(Questions[quizIndex].options);\n\t\tsetLoading(false);\n\t\tconsole.log('test: ' + quizIndex);\n\t}\n\n\tconst showResult = () => {\n\t\t//naar Resultaat\n\t}\n\n\treturn (\n\t\t<div className=\"Quiz\">\n\t\t\t<Question \n\t\t\t\tquestionIndex={quizIndex}\n\t\t\t\ttotalQuestions={TOTAL_QUESTIONS}\n\t\t\t\tquestion={question}\n\t\t\t\tanswers={userOptions}\n\t\t\t\tuserAnswer={userOptions ? userOptions[quizIndex] : undefined}\n\t\t\t\tanswerResults={answerResults}\n\t\t\t\tcallback={checkAnswer}\n\t\t\t/>\n\t\t\t<button className=\"next\" onClick={nextQuestion}>\n\t\t\t\tNEXT\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}