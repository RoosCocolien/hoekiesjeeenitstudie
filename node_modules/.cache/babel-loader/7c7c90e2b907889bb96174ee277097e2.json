{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n//functional component useForm\n//initialState stores the various values (name, email, message)\n//callback is the function that will be executed when use submits form\nexport const useForm = (callback, initialState = {}) => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    values\n  };\n};\n/*\n\tonChange >> sets target value of event that is passed to the target name\n\tinitialState should have attributes with the same name as the specified\n\tin the input field!\n\tonSubmit >> there is no database\n*/\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Contact/useForm.tsx"],"names":["useState","useForm","callback","initialState","values","setValues","onChange","event","target","name","value","onSubmit","preventDefault"],"mappings":";;AAAA,SAAgBA,QAAhB,QAAgC,OAAhC;AAGA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAgBC,YAAY,GAAG,EAA/B,KAAsC;AAAA;;AAC5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,YAAD,CAApC;;AAEA,QAAMG,QAAQ,GAAIC,KAAD,IAAgD;AAChEF,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GACvBF,KAAK,CAACC,MAAN,CAAaE;AADH,KAAD,CAAT;AAEA,GAHD;;AAKA,QAAMC,QAAQ,GAAIJ,KAAD,IAA6C;AAC7DA,IAAAA,KAAK,CAACK,cAAN;AACAV,IAAAA,QAAQ;AACR,GAHD;;AAKA,SAAO;AACNI,IAAAA,QADM;AAENK,IAAAA,QAFM;AAGNP,IAAAA;AAHM,GAAP;AAKA,CAlBM;AAsBP;AACA;AACA;AACA;AACA;AACA;;GA3BaH,O","sourcesContent":["import React, { useState } from 'react';\nimport { callbackify } from 'util';\n\n//functional component useForm\n//initialState stores the various values (name, email, message)\n//callback is the function that will be executed when use submits form\nexport const useForm = (callback: any, initialState = {}) => {\n\tconst [values, setValues] = useState(initialState);\n\n\tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetValues({ ...values, [event.target.name]:\n\t\tevent.target.value });\n\t};\n\n\tconst onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault();\n\t\tcallback();\n\t}\n\n\treturn {\n\t\tonChange,\n\t\tonSubmit,\n\t\tvalues,\n\t};\n}\n\n\n\n/*\n\tonChange >> sets target value of event that is passed to the target name\n\tinitialState should have attributes with the same name as the specified\n\tin the input field!\n\tonSubmit >> there is no database\n*/"]},"metadata":{},"sourceType":"module"}