{"ast":null,"code":"var _jsxFileName = \"/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { calculatePoints } from '../calculations/calculate'; //in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 9;\n\nconst Quiz = () => {\n  _s();\n\n  //create states\n  const [loading, setLoading] = useState(false); //start with false\n\n  const [quizIndex, setQuizIndex] = useState(0); //start at zero\n\n  const [question, setQuestion] = useState(Questions[quizIndex]); //type later\n\n  const [userOptions, setUserOptions] = useState([]);\n  const [answerResults, setAnswerResults] = useState({\n    bootcamp: 0,\n    trad: 0,\n    online: 0,\n    traineeship: 0,\n    alternative: 0\n  });\n  const [endOfQuiz, setEndOfQuiz] = useState(false);\n  const [currAnswer, setCurrAnswer] = useState();\n\n  const selectAnswer = e => {\n    // if (!endOfQuiz) {\n    // \t// get user answer\n    // \tconsole.log('quizIndex = ' + quizIndex + ' e is ' + e.currentTarget.value);\n    // }\n    //select and save current answer\n    setCurrAnswer(parseInt(e.currentTarget.value, 10)); //activate next button\n    // (document.getElementById(\"nextBtn\") as HTMLInputElement).disabled = false;\n  };\n\n  const nextQuestion = () => {\n    //if selected answer\n    //add selected answer to userOptions\n    setLoading(true);\n\n    if (currAnswer != undefined) {\n      console.log('test2');\n      console.log('curr answer is: ' + currAnswer + ' of question ' + quizIndex);\n      let newArray = [...userOptions];\n      newArray.push(currAnswer);\n      setCurrAnswer(undefined);\n      setUserOptions(newArray);\n    }\n\n    setQuestion(Questions[quizIndex + 1]);\n    setQuizIndex(quizIndex + 1);\n    setLoading(false); //only necessary if I would work with a database or API\n    // (document.getElementById(\"nextBtn\") as HTMLInputElement).disabled = true;\n  };\n\n  const assignPoints = points => {\n    console.log('test 2 assigngPoints');\n    points.bootcamp = calculatePoints(userOptions, 'bootcamp');\n    points.trad = calculatePoints(userOptions, 'trad');\n    points.online = calculatePoints(userOptions, 'online');\n    points.traineeship = calculatePoints(userOptions, 'traineeship');\n    points.alternative = calculatePoints(userOptions, 'alternative');\n    console.log(points);\n    return points;\n  };\n\n  const showResult = () => {\n    //calculate\n    let index = 0;\n\n    while (index < userOptions.length) {\n      console.log('index: ' + index + ' userOption: ' + userOptions[index]);\n      index++;\n    }\n\n    console.log('test 1 before assignPoints');\n    let points = assignPoints({\n      bootcamp: 0,\n      trad: 0,\n      online: 0,\n      traineeship: 0,\n      alternative: 0\n    });\n    console.log('test 1 after assignPoints');\n    setAnswerResults(points);\n    setQuizIndex(0);\n    setEndOfQuiz(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"QuizPage\",\n    children: [endOfQuiz || quizIndex != TOTAL_QUESTIONS && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: /*#__PURE__*/_jsxDEV(Question, {\n        questionIndex: quizIndex,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: question.question,\n        answers: question.options,\n        answerResults: answerResults,\n        callback: selectAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), currAnswer != undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nextButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nextBtn\",\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), quizIndex === TOTAL_QUESTIONS && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Goed gedaan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Je hebt het einde behaald!\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"result\",\n          onClick: showResult,\n          children: \"RESULTAAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }, this), endOfQuiz && /*#__PURE__*/_jsxDEV(Result, {\n      answerResults: answerResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"BotWOYUf5O7JASOxpIAS46ZBY20=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/rooscocolien/OneDrive/Udemy/hoekiesjeeenitstudie/src/components/Quiz.tsx"],"names":["React","useState","Question","Result","Questions","calculatePoints","TOTAL_QUESTIONS","Quiz","loading","setLoading","quizIndex","setQuizIndex","question","setQuestion","userOptions","setUserOptions","answerResults","setAnswerResults","bootcamp","trad","online","traineeship","alternative","endOfQuiz","setEndOfQuiz","currAnswer","setCurrAnswer","selectAnswer","e","parseInt","currentTarget","value","nextQuestion","undefined","console","log","newArray","push","assignPoints","points","showResult","index","length","options"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Questions from '../data/questions.json';\nimport { shuffleArray } from '../utils';\nimport { calculatePoints } from '../calculations/calculate';\n\n\n//in future: create number arrays so you can save the results and give\n//a more detailed description at the end of quiz\nconst TOTAL_QUESTIONS = 9;\nexport interface Score {\n\tbootcamp: number,\n\ttrad: number,\n\tonline: number,\n\ttraineeship: number,\n\talternative: number\n}\n\nconst Quiz = () => {\n\t//create states\n\tconst [loading, setLoading] = useState<boolean>(false); //start with false\n\tconst [quizIndex, setQuizIndex] = useState<number>(0); //start at zero\n\tconst [question, setQuestion] = useState<any>(Questions[quizIndex]); //type later\n\tconst [userOptions, setUserOptions] = useState<number[]>([]);\n\tconst [answerResults, setAnswerResults] = useState<Score>({bootcamp: 0, trad: 0, online: 0, traineeship: 0, alternative: 0});\n\tconst [endOfQuiz, setEndOfQuiz] = useState<boolean>(false);\n\tconst [currAnswer, setCurrAnswer] = useState<number>();\n\n\n\tconst selectAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\t\t// if (!endOfQuiz) {\n\t\t\t// \t// get user answer\n\t\t\t// \tconsole.log('quizIndex = ' + quizIndex + ' e is ' + e.currentTarget.value);\n\t\t\t// }\n\t\t//select and save current answer\n\t\tsetCurrAnswer(parseInt(e.currentTarget.value, 10));\n\t\t//activate next button\n\t\t// (document.getElementById(\"nextBtn\") as HTMLInputElement).disabled = false;\n\t}\n\n\tconst nextQuestion = () => {\n\t\t//if selected answer\n\t\t//add selected answer to userOptions\n\t\tsetLoading(true);\n\t\tif (currAnswer != undefined) {\n\t\t\tconsole.log('test2');\n\t\t\tconsole.log('curr answer is: ' + currAnswer + ' of question ' + quizIndex);\n\t\t\tlet newArray: number[] = [...userOptions];\n\t\t\tnewArray.push(currAnswer);\n\t\t\tsetCurrAnswer(undefined);\n\t\t\tsetUserOptions(newArray);\n\t\t}\n\t\tsetQuestion(Questions[quizIndex + 1]);\n\t\tsetQuizIndex(quizIndex + 1);\n\t\tsetLoading(false); //only necessary if I would work with a database or API\n\t\t// (document.getElementById(\"nextBtn\") as HTMLInputElement).disabled = true;\n\t}\n\n\tconst assignPoints = (points: any) => {\n\t\tconsole.log('test 2 assigngPoints');\n\t\tpoints.bootcamp = calculatePoints(userOptions, 'bootcamp');\n\t\tpoints.trad = calculatePoints(userOptions, 'trad');\n\t\tpoints.online = calculatePoints(userOptions, 'online');\n\t\tpoints.traineeship = calculatePoints(userOptions, 'traineeship');\n\t\tpoints.alternative = calculatePoints(userOptions, 'alternative');\n\t\tconsole.log(points);\n\t\treturn (points);\n\t}\n\n\tconst showResult = () => {\n\t\t//calculate\n\t\tlet index = 0;\n\t\twhile (index < userOptions.length) {\n\t\t\tconsole.log('index: ' + index + ' userOption: ' + userOptions[index]);\n\t\t\tindex++;\n\t\t}\n\t\tconsole.log('test 1 before assignPoints');\n\t\tlet points = assignPoints({bootcamp: 0, trad: 0, online: 0, traineeship: 0, alternative: 0});\n\t\tconsole.log('test 1 after assignPoints');\n\t\tsetAnswerResults(points);\n\t\tsetQuizIndex(0);\n\t\tsetEndOfQuiz(true);\n\t}\n\n\treturn (\n\t\t<div className=\"QuizPage\">\n\n\t\t\t{endOfQuiz! || quizIndex != TOTAL_QUESTIONS && \n\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t<Question \n\t\t\t\t\t\tquestionIndex={quizIndex}\n\t\t\t\t\t\ttotalQuestions={TOTAL_QUESTIONS}\n\t\t\t\t\t\tquestion={question.question}\n\t\t\t\t\t\tanswers={question.options}\n\t\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t\t\tcallback={selectAnswer}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{currAnswer != undefined &&\n\t\t\t\t<div className=\"nextButton\">\n\t\t\t\t\t<button id=\"nextBtn\" className=\"next\" onClick={nextQuestion}>\n\t\t\t\t\t\tNEXT\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{quizIndex === TOTAL_QUESTIONS &&\n\t\t\t\t\t<div className=\"Quiz\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\tGoed gedaan!\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tJe hebt het einde behaald!\n\t\t\t\t\t\t\t<button className=\"result\" onClick={showResult}>\n\t\t\t\t\t\t\t\tRESULTAAT\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{endOfQuiz &&\n\t\t\t\t<Result \n\t\t\t\t\tanswerResults={answerResults}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}